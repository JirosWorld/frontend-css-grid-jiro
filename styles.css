/* CSS huiswerk door Jiro */

* {
    margin: 0;
/*    default reset */
}

/* mobile-first: styles for small screens are default: */
/* dus: scroll naar beneden als je de styles voor desktop wilt zien */
/* en: sleep je window/scherm smaller om de veranderingen te zien */
.container {
    background-color: #F4F1DE;
    display: grid;
    grid-gap: 16px;
    padding: 16px;
    grid-template-columns: 1fr;
    grid-template-rows: 50px auto 50px 50px 50px 50px 50px; /* gives height to empty row too */
    grid-template-areas:
            "a"
            "b"
            "c"
            "d"
            "e"
            "."
            "f";
    box-sizing: border-box;
    /*after specifying the gap, excluding the edges of the container, do a "box-sizing border-box" in order to contain the padding as being part of the total width of the container*/
}

.grid-item {
    /* give all grid items the same bg color */
    background-color: #ba3b44;
    padding: 16px;
}

/* define all grid area names */
.aside-small {
    grid-area: a;
}
.main {
    grid-area: b;
}
.header {
    grid-area: c;
}
.aside-medium {
    grid-area: d;
}
.content {
    grid-area: e;
}
.footer {
    grid-area: f;
}

/* set media queries for larger screens */
@media screen and (min-width: 768px) {
    .container {
        grid-auto-flow: row;
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: 50px 174px 100px auto 50px;
        /* ik weet niet hoe ik de Header de juiste hoogte kan geven maar die 174px resulteert nu wel in 240 pixels */
        /* --> De .container grid-gap wordt er steeds bij opgeteld, maar ook de 50px van het naastliggende grid-item */
        grid-template-areas:
            "a c c"
            "b c c"
            "b e d"
            "b e ."
            "f f f";
    }
}

